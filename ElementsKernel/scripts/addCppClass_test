#!/bin/sh
home_dir=${PWD}

# Call common script
. createCommonStructure_test

class_name="ClassTest"
elt_dep_name="Alexandria"
external_dep_name="Boost"

# Create a unique directory
tmploc=${TEMPORARY_LOCATION}

cd ${MODULE_NAME_PATH}

# Create a class
AddCppClass $class_name -ed $elt_dep_name -extd $external_dep_name

# if error stop and clean up
if [ $? -ne 0 ]; then
   echo "Error: <AddCppClass $class_name -ed $elt_dep_name -extd $external_dep_name> command failed!" 1>&2
   clean_and_exit 1
fi

# Make sure the class files are created
if [ ! -e "${MODULE_NAME}/${class_name}.h" ]; then
   echo "Error: <${MODULE_NAME}/${class_name}.h> file not found!" 1>&2
   clean_and_exit 1
fi
if [ ! -e "src/lib/${class_name}.cpp" ]; then
   clean_and_exit 1
fi

# Make sure the elements_depends_on_subdirs macro is there and ElementsKernel
result=$( grep "elements_depends_on_subdirs" ${MODULE_NAME_PATH}/CMakeLists.txt |
          grep -v "#" | grep "ElementsKernel" )
if [ $? -ne 0 ]  ;then
   echo "Error: <elements_depends_on_subdirs> macro with <ElementsKernel> module not found!" 1>&2
   clean_and_exit 1
fi

# Make sure the elements_depends_on_subdirs macro is there and dependency
result=$( grep "elements_depends_on_subdirs" ${MODULE_NAME_PATH}/CMakeLists.txt |
          grep -v "#" | grep $elt_dep_name )
if [ $? -ne 0 ]  ;then
   echo "Error: <elements_depends_on_subdirs> macro with <$elt_dep_name> dependency not found!" 1>&2
   clean_and_exit 1
fi

# Make sure the find_package macro is there
result=$( grep "find_package" ${MODULE_NAME_PATH}/CMakeLists.txt |
          grep -v "#" | grep $external_dep_name )
if [ $? -ne 0 ]  ;then
   echo "Error: find_package macro not found!" 1>&2
   clean_and_exit 1
fi

# Make sure the elements_add_library macro is there
result=$( grep "elements_add_library" ${MODULE_NAME_PATH}/CMakeLists.txt |  grep -v "#" |
          grep $module_name )
if [ $? -ne 0 ]  ;then
   echo "Error: <elements_add_library> macro with <$module_name> module not found!" 1>&2
   clean_and_exit 1
fi

# Make sure the LINK_LIBRARIES is there and Element dependency
result=$( grep "LINK_LIBRARIES" ${MODULE_NAME_PATH}/CMakeLists.txt |  grep -v "#" |
          grep $elt_dep_name)
if [ $? -ne 0 ]  ;then
   echo "Error: LINK_LIBRARIES macro with <$elt_dep_name> Element dependency not found!" 1>&2
   clean_and_exit 1
fi

# Make sure the LINK_LIBRARIES is there and external dependency
result=$( grep "LINK_LIBRARIES" ${MODULE_NAME_PATH}/CMakeLists.txt |  grep -v "#" |
          grep $external_dep_name)
if [ $? -ne 0 ]  ;then
   echo "Error: LINK_LIBRARIES macro with <$external_dep_name> external dependency not found!" 1>&2
   clean_and_exit 1
fi

clean_and_exit 0
